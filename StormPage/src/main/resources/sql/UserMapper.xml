<?xml version="1.0" encoding="UTF-8"?>



<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

		
<mapper namespace="UserMapper">

	<resultMap id="userSelectMap" 	type="user">
		<result property="userId"		column="user_id"		jdbcType="VARCHAR"/>
		<result property="userPwd"		column="user_pwd"		jdbcType="VARCHAR"/>
		<result property="userName"		column="user_name"		jdbcType="VARCHAR"/>
		<result property="nickName"		column="nickname"		jdbcType="VARCHAR"/>
		<result property="email"		column="email"			jdbcType="VARCHAR"/>
		<result property="gender"		column="gender"			jdbcType="CHAR"/>
		<result property="phone"		column="phone"			jdbcType="VARCHAR"/>
		<result property="birth"		column="birth"			jdbcType="VARCHAR"/>
		<result property="userImg"		column="user_Img"		jdbcType="VARCHAR"/>
		<result property="address"		column="address"		jdbcType="VARCHAR"/>
		<result property="leaderName"	column="leader_name"	jdbcType="VARCHAR"/>
		<result property="baptismName"	column="baptism_name"	jdbcType="VARCHAR"/>
		<result property="signRegDate"	column="sign_regdate"	jdbcType="TIMESTAMP"/>
		<result property="userRole"		column="user_role"		jdbcType="CHAR"/>
		<result property="userPosition"	column="user_position"	jdbcType="CHAR"/>
		<result property="userDeleted"	column="user_deleted"	jdbcType="CHAR"/>
	</resultMap>


<!-- 관리자가 유저목록 리스트를 볼수있는 쿼리 -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT u.*, au.phone 
	  	FROM users u
	  	u.user_deleted = '0'
	  	<if test="searchCondition != null">
	  		<where>
	  			u.user_deleted = '0'
	  		</where>
			<if test="searchCondition == 0 and searchKeyword !='' ">
	 			user_id LIKE '%${searchKeyword}%'
			</if>
			<if test="searchCondition == 1 and searchKeyword !='' ">
	 			user_name LIKE '%${searchKeyword}%'
			</if>
		</if>
		<if test="searchCondition == null">
			<where>
				u.user_deleted = '0'
			</where>
		</if>
		JOIN approval_users as au
		ON u.user_name = au.user_name
		ORDER BY u.user_name ASC
		LIMIT #{currentPage}-1)*#{pageSize}+1, #{pageSize}
	</select>



	<!-- 유저들의 총 인원수를 나타내는 쿼리 search 도메인에 바인딩 하기위해 -->
	<select  id="getTotalCount"  parameterType="search"	 resultType="int">
		SELECT COUNT(*)
		FROM users
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword !='' ">
		 			user_id LIKE '%${searchKeyword}%'
				</if>
				<if test="searchCondition == 1 and searchKeyword !='' ">
		 			user_name LIKE '%${searchKeyword}%'
				</if>
			</where>
		</if>					
	</select>
	
	<!-- 유저가 자신의 정보를 상세하게 볼수있는 쿼리 -->
	<select id="getUser" parameterType="string" resultType="userSelectMap">
		SELECT u.user_id, u.user_name, u.nick_name, u.email, au.phone,
		u.gender, u.birth, u.user_img, u.address, u.baptism_name, au.phone, 
		u.user_position, u2.user_name as leader_name
		FROM users u
		JOIN approval_users au
		ON u.user_name = au.user_name
		JOIN users u2
		ON u.leader_id = u2.user_id
		WHERE u.user_id = #{value}
	</select>
	
	<!-- 관리자가 재명된 회원들의 목록을 조회하는 쿼리 -->
	<select id="getDeletedUserList" parameterType="search" resultType="userSelectMap">
		SELECT u.user_id, u.user_name, u.email, au.phone,
		u.gender, u.birth, u.user_img, u.address, u.baptism_name, au.phone, 
		u2.user_name as leader_name
		FROM users u
		<if test="searchCondition != null">
	  		<where>
	  			u.user_deleted = '1'
	  		</where>
			<if test="searchCondition == 0 and searchKeyword !='' ">
	 			user_id LIKE '%${searchKeyword}%'
			</if>
			<if test="searchCondition == 1 and searchKeyword !='' ">
	 			user_name LIKE '%${searchKeyword}%'
			</if>
		</if>
		<if test="searchCondition == null">
			<where>
				u.user_deleted = '1'
			</where>
		</if>
		JOIN approval_users as au
		ON u.user_name = au.user_name
		ORDER BY u.user_name ASC
		LIMIT #{currentPage}-1)*#{pageSize}+1, #{pageSize}
	</select>
	
	<!-- 관리자가 회원의 상세정보를 보는 쿼리 -->
	<select id="getUserAdmin" parameterType="String" resultType="userSelectMap">
		SELECT u.user_id, u.user_name, u.email, au.phone,
		u.gender, u.birth, u.user_img, u.address, u.baptism_name, au.phone, 
		u.user_position, u2.user_name as leader_name
		FROM users u
		JOIN approval_users au
		ON u.user_name = au.user_name
		JOIN users u2
		ON u.leader_id = u2.user_id
		WHERE u.user_id = #{value}
	</select>
	
	<!-- 관리자가 가입시킬 유저이름 휴대폰번호를 추가하는 쿼리 -->
	<insert  id="addUserAdmin" parameterType="userSelectMap">
		INSERT INTO approval_users (user_name, phone) values (#{userName}, #{phone})
	</insert>
	
	<!-- 회원이 회원가입할때 쿼리 -->
	<insert  id="addUser" parameterType="userSelectMap">
		INSERT INTO users (user_id, user_pwd, user_name, nick_name, email, gender, birth, user_img, 
		address, leader_name, baptism_name, sign_regdate,) values (#{userId}, #{userPwd}, #{userName}, #{nickName},
		#{email:VARCHAR}, #{gender}, #{birth}, #{userImg:VARCHAR}, #{address}, #{leaderName}, #{baptismName}, systimestamp)
	</insert>
	
	<!-- 회원이 자신의 정보를 수정하는 쿼리 -->
	<update id="updateUser" parameterType="user">
		UPDATE users
			<set>
				nick_name = #{nickName},
				email = #{email},
				birth = #{gender},
				user_img = #{userImg},
				address = #{address}
			</set>
		WHERE user_id = #{userId}
	</update>	
	
	<!-- 회원이 자신의 비밀번호를 바꾸는 쿼리 -->
	<update id="updatePwd" parameterType="user">
		UPDATE users
			<set>
				user_pwd = #{userPwd}
			</set>
		WHERE user_id = #{userId}
	</update>
	
	<!-- 회원이 자신의 휴대폰번호를 바꾸는 쿼리 -->
	<update id="updatePhone" parameterType="user">
		UPDATE users
			<set>
				phone = #{phone}
			</set>
		WHERE user_id = #{userId}
	</update>
	
	<!-- 관리자가 세례여부를 수정하는 쿼리 -->
	<update id="updateBaptismName" parameterType="user">
		UPDATE users
			<set>
				baptism_name = #{baptismName}
			</set>
		WHERE user_id = #{userId}
	</update>
	
	<!-- 관리자가 리더임명하는 쿼리 -->
	<update id="updatePositionLeader" parameterType="String">
		UPDATE users
			<set>
				user_position = '1'
			</set>
		WHERE user_id = #{value}
	</update>
	
	<!-- 관리자가 리더임명하는 쿼리 -->
	<update id="updateLeaderName" parameterType="user">
		UPDATE users
			<set>
				leader_id = #{leaderId}
			</set>
		WHERE user_id = #{userId}
	</update>
	
	<!-- 관리자가 유저를 재명하는 쿼리 -->	
	<update id="deleteUser" parameterType="String">
		UPDATE users
			<set>
				user_deleted = '1'
			</set>
		WHERE user_id = #{value}
	</update>
 
</mapper>
